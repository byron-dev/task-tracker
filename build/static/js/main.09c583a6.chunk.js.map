{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","deleteTask","method","filter","Math","floor","random","newTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09c583a6.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n    return (<button onClick={onClick} style={{ backgroundColor: color }}\n    className='btn'>\n        {text}\n    </button>)\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","// Use to set validation for properties\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button \n                color={showAdd ? 'red' : 'green'} \n                text={showAdd ? 'Close' : 'Add Task'} \n                onClick={onAdd}/>\n        </header>\n    )\n}\n\n// Setting up default properties for a component if they are not passed in the function\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\n// Setting types for properties to validate their type and options\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n    ","import { FaTimes } from 'react-icons/fa'\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : '' }`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>\n                {task.text} \n                <FaTimes \n                    style={{ color: 'red', cursor: 'pointer' }}\n                    onClick={() => onDelete(task.id)}\n                />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n          {tasks.map((task) => (\n              <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\n              ))}  \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please add task')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input\n                    type='text'\n                    placeholder='Type your task'\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input \n                    type='text' \n                    placeholder='Type the day and time'\n                    value={day}\n                    onChange={(e) => setDay(e.target.value)}\n                />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input\n                    type='checkbox'\n                    value={reminder}\n                    checked={reminder}\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\n                />\n            </div>\n\n            <input type='submit' value='Save task' className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n    const [showAddTask, setShowAddTask] = useState(false)\n    const [tasks, setTasks] = useState([])\n\n    useEffect(() => {\n        const getTasks = async () => {\n            const tasksFromServer = await fetchTasks()\n            setTasks(tasksFromServer)\n        }\n        getTasks()\n    }, [])\n\n    const fetchTasks = async () => {\n        const res = await fetch('http://localhost:5000/tasks')\n        const data  = await res.json()\n        return data\n    }\n\n    const addTask = (task) => {\n        const id = Math.floor(Math.random() * 10000) + 1\n        const newTask = { id, ...task}\n        setTasks([...tasks, newTask])\n    }\n\n    const deleteTask = async (id) => {\n        await fetch(`http://localhost:5000/tasks/${id}`, {\n            method: 'DELETE'\n        })\n\n        setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n    const toggleReminder = (id) => {\n        setTasks(\n            tasks.map(\n                (task) => task.id === id ? {...task, reminder:!task.reminder} : task\n            )\n        )\n    }\n\n    return (\n        <div className=\"container\">\n            <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? (\n                <Tasks \n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleReminder}\n                />\n                ) : 'No tasks to show' }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}